/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        arrows {
            bindings = <&mo 3>;
            key-positions = <15 16>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |   T   |   |  Y  |  U   |  I  |  O  |  P  | ESC |
            // | CTRL |  A  |  S  |  D  |  F  |   G   |   |  H  |  J   |  K  |  L  |  ;  |  '  |
            // | SHFT |  Z  |  X  |  C  |  V  |   B   |   |  N  |  M   |  ,  |  .  |  /  | ENT |
            //                    | GUI | LWR | BKSPC |   | SPC | RSE  | ALT |

            label = "Base";
            bindings = <
&kp ESCAPE  &kp Q      &kp W  &kp E         &kp R      &kp T                       &kp Y                    &kp U         &kp I     &kp O      &kp P       &kp ENTER
&kp CLCK    &kp A      &kp S  &kp D         &kp F      &kp G                       &kp H                    &kp J         &kp K     &kp L      &kp SEMI    &kp SQT
&trans      &kp SLASH  &kp Z  &kp X         &kp C      &kp V                       &kp B                    &kp N         &kp M     &kp COMMA  &kp PERIOD  &trans
                              &kp LEFT_ALT  &lt 2 TAB  &mt LEFT_SHIFT BACKSPACE    &mt RIGHT_CONTROL SPACE  &lt 2 DELETE  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |   5   |   |  6  |  7  |  8  |  9  |  0  | ENT |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 |  BT5  |   | LFT | DWN |  UP | RGT |     |     |
            // | SHFT |     |     |     |     |       |   |     |     |     |     |     |     |
            //                    | GUI |     | BKSPC |   | SPC |     | ALT |

            label = "Lower";
            bindings = <
&trans      &trans        &trans        &trans        &trans        &trans                      &trans              &kp F1  &kp F2    &kp F3  &kp F10  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                &trans              &kp F4  &kp F5    &kp F6  &kp F11  &trans
&trans      &trans        &trans        &trans        &trans        &trans                      &trans              &kp F7  &kp F8    &kp F9  &kp F12  &trans
                                        &kp LGUI      &trans        &mt LEFT_SHIFT BACKSPACE    &mt LEFT_ALT SPACE  &trans  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |   %   |   |  ^  |  &  |  *  |  (  |  )  | ENT |
            // | CTRL |     |     |     |     |       |   |  -  |  =  |  [  |  ]  |  \  |  `  |
            // | SHFT |     |     |     |     |       |   |  _  |  +  |  {  |  }  | "|" |  ~  |
            //                    | GUI |     | BKSPC |   | SPC |     | ALT |

            label = "Raise";
            bindings = <
&kp TAB    &kp EXCL   &kp AT            &kp HASH           &kp DLLR              &kp PRCNT                   &kp PLUS            &kp N1  &kp N2  &kp N3  &kp SLASH      &kp ENTER
&kp LCTRL  &kp CARET  &kp AMPS          &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS       &kp MINUS           &kp N4  &kp N5  &kp N6  &kp BACKSLASH  &kp GRAVE
&kp LSHFT  &kp TILDE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE        &kp RIGHT_BRACE             &kp EQUAL           &kp N7  &kp N8  &kp N9  &kp PERIOD     &kp LESS_THAN
                                        &kp LGUI           &mo 1                 &mt LEFT_SHIFT BACKSPACE    &mt LEFT_ALT SPACE  &mo 1   &kp N0
            >;
        };

        arrows {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans                &trans          &trans          &trans        &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans                &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans                &trans          &trans          &trans        &trans     &trans
                        &trans  &trans  &kp LEFT_SHIFT    &kp LA(LEFT_CONTROL)  &trans          &trans
            >;
        };
    };
};
